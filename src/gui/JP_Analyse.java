/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import entite.Congregation;
import entite.Proclamateur;
import entite.Site;
import java.awt.BorderLayout;
import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;

import net.sf.jasperreports.view.JRViewer;
import utilites.Lis_Utilites;

/**
 *
 * @author daniel
 */
public class JP_Analyse extends javax.swing.JPanel {
    private static accesData.AccesData ad;
    private List<Congregation> listCong;
    private List<Proclamateur> listProc;
    private List<Site> listSite;
    private Date dateD,dateF;
    private Site site;
    private JasperPrint jp;
    private OutputStream out;
    
    SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
    /**
     * Creates new form JP_Analyse
     */
    public JP_Analyse(accesData.AccesData ad) {
        this.ad=ad;
        
        listProc=ad.getListe("Proclamateur.findAll");
        listCong=ad.getListe("Congregation.findAll");//Initialiser la liste des congregations
        listSite=ad.getListe("Site.findAll");
       
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        JRProc = new javax.swing.JRadioButton();
        JRActivite = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jRadioButtonSite = new javax.swing.JRadioButton();
        jRadioButtonSiteUnique = new javax.swing.JRadioButton();
        jComboBoxSite = new javax.swing.JComboBox(new Site().listSiteNom(listSite));
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        JCProc = new javax.swing.JComboBox(new Proclamateur().getNomProc(listProc));
        fJDatePicker1 = new net.sf.fjreport.datepicker.FJDatePicker();
        fJDatePicker2 = new net.sf.fjreport.datepicker.FJDatePicker();
        JBAnalyser = new javax.swing.JButton();
        JBMail = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JPReporting = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Analyse global de l'activité"));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Paramétrage"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Elément d'analyse"));

        buttonGroup1.add(JRProc);
        JRProc.setText("Proclamateur");
        JRProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRProcActionPerformed(evt);
            }
        });

        buttonGroup1.add(JRActivite);
        JRActivite.setText("Activité");
        JRActivite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRActiviteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JRProc)
                    .addComponent(JRActivite))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JRProc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addComponent(JRActivite))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Analyser  par"));

        buttonGroup2.add(jRadioButtonSite);
        jRadioButtonSite.setText("Sites");
        jRadioButtonSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSiteActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButtonSiteUnique);
        jRadioButtonSiteUnique.setText("Site unique");
        jRadioButtonSiteUnique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSiteUniqueActionPerformed(evt);
            }
        });

        jComboBoxSite.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jRadioButtonSite)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jRadioButtonSiteUnique)
                        .addGap(44, 44, 44)
                        .addComponent(jComboBoxSite, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jRadioButtonSite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSiteUnique)
                    .addComponent(jComboBoxSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Analyse du proclamateur"));

        jLabel1.setText("Proclamateurs");

        JCProc.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(JCProc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(JCProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        JBAnalyser.setText("Analyser");
        JBAnalyser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAnalyserActionPerformed(evt);
            }
        });

        JBMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/email.gif"))); // NOI18N
        JBMail.setText("Envoyer un mail");
        JBMail.setEnabled(false);
        JBMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBMailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JBAnalyser)
                                .addGap(18, 18, 18)
                                .addComponent(JBMail))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(fJDatePicker2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fJDatePicker1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(56, 56, 56))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fJDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fJDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBAnalyser)
                    .addComponent(JBMail))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        add(jScrollPane2, java.awt.BorderLayout.WEST);

        JPReporting.setBorder(javax.swing.BorderFactory.createTitledBorder("Rapport"));
        JPReporting.setLayout(new java.awt.BorderLayout());
        JPReporting.add(jLabel2, java.awt.BorderLayout.CENTER);

        jScrollPane1.setViewportView(JPReporting);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void JRProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRProcActionPerformed
        // TODO add your handling code here:
        JCProc.setEnabled(true);
    }//GEN-LAST:event_JRProcActionPerformed

    private void JRActiviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRActiviteActionPerformed
        // TODO add your handling code here:
         JCProc.setEnabled(false);
         jRadioButtonSite.setSelected(true);
    }//GEN-LAST:event_JRActiviteActionPerformed

    private void JBAnalyserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAnalyserActionPerformed
        // TODO add your handling code here:
        if(JRProc.isSelected()){
                 dateD=fJDatePicker1.getValue();
                 dateF=fJDatePicker2.getValue();
                 if(dateD==null || dateF==null){
                     JOptionPane.showMessageDialog(null, "D\u00E9limitez les marges, avec la date de d\u00E9but et la date de fin", "Infromation incompl\u00E8te",JOptionPane.ERROR_MESSAGE);
                     return;
                 }
                 InputStream reportStream = this.getClass().getResourceAsStream("/propriete/Note_Proclamateur.jrxml"); 
                 HashMap map=new HashMap();
                 map.put("ProclamateurID",listProc.get(JCProc.getSelectedIndex()).getIdproclamateur());
                 map.put("dateD",dateD);
                 map.put("dateF",dateF);
                 Lis_Utilites lu=new Lis_Utilites("propriete/chemin.properties");
                 String chemin=lu.getValeurProperties("chemin").toString();
                 map.put("SUBREPORT_DIR",chemin);
                 // Convert template to JasperDesign  
                 try{
                     JasperDesign jd = JRXmlLoader.load(reportStream);  
                  
                     // Compile design to JasperReport  
                      JasperReport jr = JasperCompileManager.compileReport(jd); 
                          
                      // Create the JasperPrint object  
                      // Make sure to pass the JasperReport, report parameters, and data source  
                     jp = JasperFillManager.fillReport(jr,map, new utilites.MaConnexion().getInstance());  
                    // JasperViewer jv = new JasperViewer(jp);  
                     JRViewer jrv=new JRViewer(jp);

                     JPReporting.removeAll();
                     JPReporting.add(jrv,BorderLayout.CENTER);
                     JPReporting.revalidate();                                         
                 }catch(Exception e){
                     JOptionPane.showMessageDialog(this, ""+e.getMessage());
                 }
                 
              
        }else{
            if(JRActivite.isSelected()){
                dateD=fJDatePicker1.getValue();
                dateF=fJDatePicker2.getValue();
                
                if(dateD==null || dateF==null){
                     JOptionPane.showMessageDialog(null, "D\u00E9limitez les marges, avec la date de d\u00E9but et la date de fin", "Infromation incompl\u00E8te",JOptionPane.ERROR_MESSAGE);
                     return;
                 }
                
                if(jRadioButtonSiteUnique.isSelected()){
                    
                    site=listSite.get(jComboBoxSite.getSelectedIndex());
                    //appel de la methode qu initialise la table ou doit puiser les donnees pour le rapport
                    new Site().setActiviteSite(formater.format(dateD),formater.format(dateF), site.getLieu());
                    System.out.println("date :"+formater.format(dateD));
                    
                    InputStream reportStream = this.getClass().getResourceAsStream("/propriete/Statistique_Site_Activite.jrxml"); 
                    HashMap map=new HashMap();
                    map.put("dateD",dateD);
                    map.put("dateF",dateF);
                    map.put("siteID",site.getIdsite());
                     Lis_Utilites lu=new Lis_Utilites("propriete/chemin.properties");
                         String chemin=lu.getValeurProperties("chemin").toString();
                         map.put("SUBREPORT_DIR",chemin);
                    
                    // Convert template to JasperDesign  
                    try{
                        JasperDesign jd = JRXmlLoader.load(reportStream);  
                  
                        // Compile design to JasperReport  
                        JasperReport jr = JasperCompileManager.compileReport(jd); 
                          
                        // Create the JasperPrint object  
                        // Make sure to pass the JasperReport, report parameters, and data source  
                        jp = JasperFillManager.fillReport(jr,map, new utilites.MaConnexion().getInstance());  
                        // JasperViewer jv = new JasperViewer(jp);  
                       JRViewer jrv=new JRViewer(jp);

                       JPReporting.removeAll();
                       JPReporting.add(jrv,BorderLayout.CENTER);
                       JPReporting.revalidate();  
                    }catch(Exception e){
                         JOptionPane.showMessageDialog(this, ""+e.getMessage());
                    }
                   }else{
                        
                        //appel de la methode qu initialise la table ou doit puiser les donnees pour le rapport
                        new Site().setActiviteSiteGenerale(formater.format(dateD),formater.format(dateF));                                
                        InputStream reportStream = this.getClass().getResourceAsStream("/propriete/Statistique_Site_Generale.jrxml"); 
                        HashMap map=new HashMap();
                         Lis_Utilites lu=new Lis_Utilites("propriete/chemin.properties");
                         String chemin=lu.getValeurProperties("chemin").toString();
                         map.put("SUBREPORT_DIR",chemin);
                        
                        // Convert template to JasperDesign  
                        try{
                             JasperDesign jd = JRXmlLoader.load(reportStream);  
                  
                             // Compile design to JasperReport  
                             JasperReport jr = JasperCompileManager.compileReport(jd); 
                          
                            // Create the JasperPrint object  
                            // Make sure to pass the JasperReport, report parameters, and data source  
                            jp = JasperFillManager.fillReport(jr,map, new utilites.MaConnexion().getInstance());  
                            // JasperViewer jv = new JasperViewer(jp);  
                            JRViewer jrv=new JRViewer(jp);

                            JPReporting.removeAll();
                            JPReporting.add(jrv,BorderLayout.CENTER);
                            JPReporting.revalidate();  
                        }catch(Exception e){
                              JOptionPane.showMessageDialog(this, ""+e.getMessage());
                        }
                    
                }
            }
        }
    }//GEN-LAST:event_JBAnalyserActionPerformed

    private void jRadioButtonSiteUniqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSiteUniqueActionPerformed
        // TODO add your handling code here:
        jComboBoxSite.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonSiteUniqueActionPerformed

    private void jRadioButtonSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSiteActionPerformed
        // TODO add your handling code here:
        jComboBoxSite.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonSiteActionPerformed

    private void JBMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBMailActionPerformed
        // TODO add your handling code here:
        File f;
        JFileChooser fc = new JFileChooser();	
        int retour = fc.showOpenDialog(this);
	if ( retour == JFileChooser.APPROVE_OPTION ){
            f= fc.getSelectedFile();
            try{
               JasperExportManager.exportReportToPdfFile(jp,f.getAbsolutePath());
               
            }catch(Exception e){
                e.printStackTrace();
            }
        
        }
	  
       
    }//GEN-LAST:event_JBMailActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBAnalyser;
    private javax.swing.JButton JBMail;
    private javax.swing.JComboBox JCProc;
    private javax.swing.JPanel JPReporting;
    private javax.swing.JRadioButton JRActivite;
    private javax.swing.JRadioButton JRProc;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private net.sf.fjreport.datepicker.FJDatePicker fJDatePicker1;
    private net.sf.fjreport.datepicker.FJDatePicker fJDatePicker2;
    private javax.swing.JComboBox jComboBoxSite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButtonSite;
    private javax.swing.JRadioButton jRadioButtonSiteUnique;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
